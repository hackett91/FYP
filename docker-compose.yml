version: "3"
services:
  node-red:
    build:
      context: .
      dockerfile: /home/cian/Desktop/DT224/FYP/nodered/Dockerfile
    environment:
      - TZ=Europe/Amsterdam
    ports:
      - "1880:1880"
    networks:
      - node-red-net
    volumes:
      - ./data:/data
    restart: always
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.6
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'TestTopic:12:3'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - default
  grafana:
      image: grafana/grafana
      container_name: grafana
      restart: always
      ports:
        - 3000:3000
      networks:
        - monitoring
      volumes:
        - grafana-volume:/var/lib/grafana
  influxdb:
      image: influxdb:latest
      container_name: influxdb
      restart: always
      ports:
        - 8086:8086
        - 2003:2003
      networks:
        - monitoring
      volumes:
        - influxdb-volume:/var/lib/influxdb
        - ./influxdbconf/influxdb.conf:/etc/influxdb/influxdb.conf:ro
  flume:
    image: avastsoftware/flume-hdfs
    container_name: flume-hdfs
    restart: always
    hostname: 192.168.1.6
    environment:
      FLUME_AGENT_NAME: agent
    volumes:
      - /home/cian/Desktop/DT224/FYP/flume:/opt/lib/flume/conf

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    hostname: localhost
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop/hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    hostname: localhost
    ports:
      - 9864:9864
      - 9867:9867
      - 9866:9866
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop/hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    hostname: localhost
    ports:
      - 8030:8030
      - 8031:8031
      - 8032:8032
      - 8088:8088
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop/hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop/hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop/hadoop.env

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  grafana-volume:
    external: true
  influxdb-volume:
    external: true
  node-red-data:
networks:
  node-red-net:
  monitoring:
